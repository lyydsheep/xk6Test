// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"email/dal/cache"
	"email/dal/dao"
	"email/logic/handler"
	"email/logic/repository"
	"email/logic/service"
	"email/middleware"
	"email/router"
)

// Injectors from wire.go:

func InitializeApp() *App {
	query := dao.DB()
	emailTaskSubRepo := repository.NewTaskSubRepoV1(query)
	cacheCache := cache.NewMemCache()
	emailTemplateRepo := repository.NewEmailTemplateRepoV1(query, cacheCache)
	taskConfigRepo := repository.NewTaskConfigRepoV1(query, cacheCache)
	usrUserRepo := repository.NewUsrUserRepoV1(query)
	emailTaskRepo := repository.NewEmailTaskRepoV1(query)
	emailSysUserRepo := repository.NewEmailSysUserRepoV1(query, cacheCache)
	emailUnsubscribeUsrUserRepo := repository.NewEmailUnsubscribeUsrUserRepoV1(query)
	emailTaskService := service.NewEmailTaskService(emailTaskSubRepo, emailTemplateRepo, taskConfigRepo, usrUserRepo, emailTaskRepo, emailSysUserRepo, emailUnsubscribeUsrUserRepo)
	emailRedemptionCodeRepo := repository.NewEmailRedemptionCodeV1(query)
	emailRedemptionTaskSubRepo := repository.NewEmailRedemptionTaskSubV1(query)
	emailDomainCredibilityRepo := repository.NewEmailDomainCredibilityRepoV1(query)
	emailTaskSubService := service.NewEmailTaskSubService(emailTaskSubRepo, emailSysUserRepo, emailTaskRepo, usrUserRepo, emailTemplateRepo, emailRedemptionCodeRepo, emailRedemptionTaskSubRepo, emailUnsubscribeUsrUserRepo, emailDomainCredibilityRepo, query)
	emailEventService := service.NewEmailEventService(emailTaskSubRepo, taskConfigRepo, emailTemplateRepo)
	eventService := service.NewEventService(emailSysUserRepo, emailTaskRepo, emailTaskSubRepo, emailTemplateRepo)
	eventHandler := handler.NewEventHandler(eventService)
	userHandler := handler.NewUserHandler(emailTaskSubService)
	int2 := _wireIntValue
	handlerFunc := middleware.RateLimiter(int2)
	engine := router.RegisterRouter(eventHandler, userHandler, handlerFunc)
	emailResultRepo := repository.NewEmailResultRepoV1(query)
	opsEmlNumberSuccessRepo := repository.NewOpsEmlNumberSuccessRepoV1(query)
	aliFlowControlService := service.NewFlowControlService(emailDomainCredibilityRepo, emailTaskSubRepo, emailResultRepo, emailSysUserRepo, opsEmlNumberSuccessRepo)
	emailResultService := service.NewEmailResultService(emailTaskSubRepo, emailSysUserRepo, emailResultRepo, taskConfigRepo, opsEmlNumberSuccessRepo, emailDomainCredibilityRepo, emailTemplateRepo)
	app := NewApp(emailTaskService, emailTaskSubService, emailEventService, engine, aliFlowControlService, emailResultService)
	return app
}

var (
	_wireIntValue = UnSubscribeRate
)

// wire.go:

const (
	UnSubscribeRate = 1
)
